server.port=8761
spring.application.name=eureka-server

#安全认证
spring.security.basic.enabled=true
spring.security.user.password=admin
spring.security.user.name=admin

#eureka是一个高可用的组件，它没有后端缓存，
#每一个实例注册之后需要向注册中心发送心跳（因此可以在内存中完成），
#在默认情况下erureka server也是一个eureka client ,必须要指定一个 server
#通过eureka.client.registerWithEureka：false和fetchRegistry：false来表明自己是一个eureka server

#设置当前实例的主机名称
eureka.instance.hostname=localhost
# 注册时显示ip
eureka.instance.prefer-ip-address=true
# 声明是否将自己的信息注册到 Eureka 服务器上 是否注册为服务
eureka.client.register-with-eureka=false
# 是否到 Eureka 服务器中抓取注册信息 是否检索服务
eureka.client.fetch-registry= false
#eureka默认空间的地址
eureka.client.service-url.defaultZone=http://${eureka.instance.hostname}:${server.port}/eureka/
#eureka.instance.ip-address=localhost
#定义服务续约任务（心跳）的调用间隔，单位：秒
#eureka.instance.lease-renewal-interval-in-seconds=30
#定义服务失效的时间，单位：秒
#eureka.instance.lease-expiration-duration-in-seconds=90
#状态页面的URL，相对路径，默认使用 HTTP 访问，如果需要使用 HTTPS则需要使用绝对路径配置
#eureka.instance.status-page-url-path=/info
#健康检查页面的URL，相对路径，默认使用 HTTP 访问，如果需要使用 HTTPS则需要使用绝对路径配置
#eureka.instance.health-check-url-path=/health
#健康检查页面的URL，绝对路径
eureka.instance.health-check-url=/
#关闭注册中心的保护机制，Eureka 会统计15分钟之内心跳失败的比例低于85%将会触发保护机制，不剔除服务提供者，如果关闭服务注册中心将不可用的实例正确剔除
#关闭自我保护(生产时打开该选项)
eureka.server.enable-self-preservation=true
#扫描失效服务的间隔时间（缺省为60*1000ms）
eureka.server.eviction-interval-timer-in-ms=5000




spring.freemarker.prefer-file-system-access=false
